
exec silver.load_silver
create or alter procedure silver.load_silver as
begin 
declare @starttime datetime, @endtime datetime 
begin try
set @starttime=getdate();
    truncate table silver.crm_cust_info
    insert into silver.crm_cust_info(
    cst_id,
    cst_key,
    cst_first_name,
    cst_lastname,
    cst_marital_status,
    cst_gndr,
    cst_create_date)
    select 
    cst_id,
    cst_key,
    trim(cst_first_name) as cst_first_name,
    trim(cst_lastname) as cst_lastname,
    case 
     when upper(trim(cst_marital_status)) = 'S' then 'Single'
     when upper(trim(cst_marital_status))='M' then 'Married'
     else 'n/a'
     end cst_marital_status,
    case 
     when upper(trim(cst_gndr)) = 'M' then 'Male'
     when upper(trim(cst_gndr))='F' then 'Female'
     else 'n/a'
     end cst_gndr,
    cst_create_date
    --removing duplicates and null
    from (select
    *,
    row_number() over(partition by cst_id order by cst_create_date desc) flag
    from bronze.crm_cust_info
    where cst_id is not null
    )t
    where flag=1
    set @endtime=getdate();
    print 'time'+ cast(datediff(second,@starttime,@endtime)as varchar)


    truncate table silver.crm_prd_info
    insert into silver.crm_prd_info(
    prd_id,
    cat_id,
    prd_key,
    prd_nm,
    prd_cost,
    prd_line,
    prd_start_dt,
    prd_end_dt)
    select
    prd_id,
    replace(SUBSTRING (prd_key,1,5),'-','_')  as cat_id, --using this bcz check in erp_px_catg1v2 we have cat to join we neeed cat
    substring(prd_key,7,len(prd_key)) as prd_key,
    prd_nm,
    isnull(prd_cost,0) as prd_cost,
    case 
        when upper(trim(prd_line))='M' then 'Mountain'
        when upper(trim(prd_line)) ='R' then 'Road'
        when upper (trim(prd_line))='S' then 'Other Sales'
        when upper(trim(prd_line))='T' then  'Touring'
        else 'n/a'
    end as prd_line,
    cast(prd_start_dt as date) as prd_start_dt,
    CAST(
            DATEADD(
                DAY, -1,
                LEAD(prd_start_dt) OVER (PARTITION BY prd_key ORDER BY prd_start_dt)
            ) AS DATE
        ) AS prd_end_dt
    FROM bronze.crm_prd_info;


    truncate table silver.crm_sales_details
    insert into silver.crm_sales_details(
    sls_ord_num,
    sls_prd_key,
    sls_cust_id,
    sls_order_dt,	
    sls_ship_dt,	
    sls_due_dt,	
    sls_sales,	
    sls_quantity,	
    sls_price )
    select 
    sls_ord_num,
    sls_prd_key,
    sls_cust_id,
    case 
    when sls_order_dt =0 or len(sls_order_dt) !=8 then null
    else cast(cast(sls_order_dt as varchar)as date)
    end as sls_order_dt,
    case 
    when sls_ship_dt =0 or len(sls_ship_dt) !=8 then null
    else cast(cast(sls_ship_dt as varchar)as date)
    end as sls_ship_dt,
    case 
    when sls_due_dt =0 or len(sls_due_dt) !=8 then null
    else cast(cast(sls_due_dt as varchar)as date)
    end as sls_due_dt,
    case when sls_sales is null or sls_sales <=0 or sls_sales!= sls_quantity * abs(sls_price )
    then sls_quantity * abs(sls_price)
    else sls_sales
    end as sls_sales,
    sls_quantity,
    case when sls_price is null or sls_price <=0
    then sls_sales/nullif(sls_quantity,0)
    else sls_price
    end as sls_price
    FROM bronze.crm_sales_details


    truncate table silver.erp_CUST_AZ12
    INsert into silver.erp_CUST_AZ12(
    CID,
    BDATE,
    GEN)
    select 
    case when CID like 'NAS%' then substring(CID,4, Len(CID))
    ELSE CID
    end as CID,
    case when BDATE> GETDATE() then NULL
    ELSE BDATE
    END AS BDATE,
    case when upper(trim(gen)) in ('M','Male') then 'Male'
    when upper(trim(gen)) in ('F','Female') then 'Female'
    else 'n/a'
    end as BDATE
    from bronze.erp_CUST_AZ12

    truncate table silver.erp_loc_a101
    insert into silver.erp_loc_a101(cid,CNTRY)
    select 
    replace(cid,'-','')as cid,
    case when trim(CNTRY)='DE' then 'Germany'
    when trim(CNTRY) IN ('USA','US') then 'United States'
    when trim(CNTRY) ='' or CNTRY is null then 'n/a'
    else CNTRY
    end as CNTRY
    from bronze.erp_loc_a101

    truncate table silver.erp_px_cat_g1v2
    INSERT INTO silver.erp_px_cat_g1v2(
    ID,
    CAT,
    SUBCAT,
    MAINTENANCE)
    select ID,
    CAT,
    SUBCAT,
    MAINTENANCE
    from bronze.erp_px_cat_g1v2;
    end try 
    begin catch 
    print 'error'+ error_message();
    end catch
    end

    








